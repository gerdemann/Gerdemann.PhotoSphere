prototype(Gerdemann.PhotoSphere:PhotoSphere) < prototype(TYPO3.Neos:Content) {
    image = ${q(node).property('image')}
    width = ${q(node).property('width')}
    height = ${q(node).property('height')}
    heading = ${q(node).property('heading')}
    pitch = ${q(node).property('pitch')}
    zoom = ${q(node).property('zoom')}
    headline = ${q(node).property('headline')}
    copyright = ${q(node).property('copyright')}

    @context.image = ${this.image}
    @context.width = ${!String.isBlank(this.width) ? this.width : '100%'}
    @context.height = ${!String.isBlank(this.height) ? this.height : '300px'}
    @context.heading = ${!String.isBlank(this.heading) ? this.heading : 0}
    @context.pitch = ${!String.isBlank(this.pitch) ? this.pitch : 0}
    @context.zoom = ${!String.isBlank(this.zoom) ? this.zoom : 0}
    @context.headline = ${this.headline}
    @context.copyright = ${this.copyright}

    attributes {
        class = 'gerdemann-photosphere'
        id = ${'photosphere-' + node.identifier}
        style = ${'width: ' + width + '; height: ' + height + ';'}
        data-image = TYPO3.TypoScript:ResourceUri {
             resource = ${image.resource}
        }
        data-heading = ${heading}
        data-pitch = ${pitch}
        data-zoom = ${zoom}
        data-headline = ${headline}
        data-copyright = ${copyright}
        data-imagewidth = ${image.width}
        data-imageheight = ${image.height}
    }
    placeholder = TYPO3.TypoScript:Tag {
        tagName = 'img'
        attributes {
            src = TYPO3.TypoScript:Case {
                imageAvailable {
                    condition = ${image.resource}
                    renderer = TYPO3.TypoScript:ResourceUri {
                        resource = ${image.resource}
                   }
                }

                fallBackimage {
                    condition = ${image.resource}
                    renderer = TYPO3.TypoScript:ResourceUri {
                        path = 'Images/dummy-image.svg'
                        package = 'TYPO3.Neos'
                   }
                }
            }
            style = ${'width: ' + width + '; height: ' + height + ';'}
        }
        alt = 'PhotoSphere Placeholder'
        @if.onlyRenderWhenInBackend = ${documentNode.context.inBackend}
    }
}